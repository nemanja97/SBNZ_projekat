package rs.ac.uns.ftn.sbnz.rules

import rs.ac.uns.ftn.sbnz.models.drools.PropertyWithScore;
import rs.ac.uns.ftn.sbnz.models.drools.ScoredProperties;
import rs.ac.uns.ftn.sbnz.models.*;
import rs.ac.uns.ftn.sbnz.models.Property;
import rs.ac.uns.ftn.sbnz.models.PlaceOfInterest;
import rs.ac.uns.ftn.sbnz.models.drools.SmartSearch;
import rs.ac.uns.ftn.sbnz.models.drools.PropertyInformation;
import rs.ac.uns.ftn.sbnz.models.drools.PersonalInformation;
import rs.ac.uns.ftn.sbnz.models.enums.Interest;
import rs.ac.uns.ftn.sbnz.models.enums.Heating;
import rs.ac.uns.ftn.sbnz.models.enums.PetStatus;
import rs.ac.uns.ftn.sbnz.models.enums.Amenity;
import rs.ac.uns.ftn.sbnz.models.enums.TypeOfPlace;

import java.util.List;

rule "Calculate amenity score" salience 1
    when
        $ps: PropertyWithScore(scaler.getFiredRules() not contains "Calculate amenity score");
        $sp: ScoredProperties();
    then
        System.out.println(String.format("Calculating amenity score for %s", $ps.getProperty().getId()));
        double score = 0.0;

        if ($ps.getProperty().getAmenities().contains(Amenity.ELEVATOR))
            score += 2 * $ps.getScaler().getElevatorScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.AIR_CONDITIONING))
            score += 1.5 * $ps.getScaler().getAirConditioningScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.CABLE_READY))
            score += 2 * $ps.getScaler().getCableReadyScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.HIGH_SPEED_INTERNET_ACCESS))
            score += 2.5 * $ps.getScaler().getHighSpeedInternetScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.SWIMMING_POOL))
            score += 4 * $ps.getScaler().getSwimmingPoolScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.GARAGE))
            score += 2.5 * $ps.getScaler().getGarageScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.SECURITY))
            score += 6 * $ps.getScaler().getSecurityScale();
        if ($ps.getProperty().getAmenities().contains(Amenity.GATED))
            score += 3.5 * $ps.getScaler().getGatedScale();

        $ps.setScore($ps.getScore() + score);
        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score");
        update($ps);
end