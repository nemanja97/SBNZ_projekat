package rs.ac.uns.ftn.sbnz.rules

import rs.ac.uns.ftn.sbnz.models.drools.PropertyWithScore;
import rs.ac.uns.ftn.sbnz.models.drools.ScoredProperties;
import rs.ac.uns.ftn.sbnz.models.*;
import rs.ac.uns.ftn.sbnz.models.Property;
import rs.ac.uns.ftn.sbnz.models.PlaceOfInterest;
import rs.ac.uns.ftn.sbnz.models.drools.SmartSearch;
import rs.ac.uns.ftn.sbnz.models.drools.PropertyInformation;
import rs.ac.uns.ftn.sbnz.models.drools.PersonalInformation;
import rs.ac.uns.ftn.sbnz.models.enums.Interest;
import rs.ac.uns.ftn.sbnz.models.enums.Heating;
import rs.ac.uns.ftn.sbnz.models.enums.PetStatus;
import rs.ac.uns.ftn.sbnz.models.enums.Amenity;
import rs.ac.uns.ftn.sbnz.models.enums.TypeOfPlace;

import java.util.List;
import java.util.ArrayList;

rule "Add to return list"
salience $score
agenda-group "finishing"
no-loop
    when
        $ps: PropertyWithScore($score: score);
        $sp: ScoredProperties();
    then
        System.out.println(String.format("Adding: %s with score %s", $ps.getProperty().getId(), $ps.getScore()));
        List<PropertyWithScore> appendedList = new ArrayList<PropertyWithScore>($sp.getPropertyWithScores());
        appendedList.add($ps);

        $sp.setPropertyWithScores(appendedList);
        update($sp)
end