package rs.ac.uns.ftn.sbnz.rules

import rs.ac.uns.ftn.sbnz.models.drools.PropertyWithScore;
import rs.ac.uns.ftn.sbnz.models.drools.ScoredProperties;
import rs.ac.uns.ftn.sbnz.models.*;
import rs.ac.uns.ftn.sbnz.models.Property;
import rs.ac.uns.ftn.sbnz.models.PlaceOfInterest;
import rs.ac.uns.ftn.sbnz.models.drools.SmartSearch;
import rs.ac.uns.ftn.sbnz.models.drools.PropertyInformation;
import rs.ac.uns.ftn.sbnz.models.drools.PersonalInformation;
import rs.ac.uns.ftn.sbnz.models.enums.Interest;
import rs.ac.uns.ftn.sbnz.models.enums.Heating;
import rs.ac.uns.ftn.sbnz.models.enums.PetStatus;
import rs.ac.uns.ftn.sbnz.models.enums.Amenity;
import rs.ac.uns.ftn.sbnz.models.enums.TypeOfPlace;

import java.util.List;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ELEVATOR
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - ELEVATOR" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - ELEVATOR",
            property.getAmenities() contains Amenity.ELEVATOR
         );
    then
        System.out.println(String.format("Adding ELEVATOR amenity score for %s", $ps.getProperty().getId()));

        double score = 2 * $ps.getScaler().getElevatorScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - ELEVATOR");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// AIR_CONDITIONING
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - AIR_CONDITIONING" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - AIR_CONDITIONING",
            property.getAmenities() contains Amenity.AIR_CONDITIONING
         );
    then
        System.out.println(String.format("Adding AIR_CONDITIONING amenity score for %s", $ps.getProperty().getId()));

        double score = 1.5 * $ps.getScaler().getAirConditioningScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - AIR_CONDITIONING");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// CABLE_READY
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - CABLE_READY" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - CABLE_READY",
            property.getAmenities() contains Amenity.CABLE_READY
         );
    then
        System.out.println(String.format("Adding CABLE_READY amenity score for %s", $ps.getProperty().getId()));

        double score = 2 * $ps.getScaler().getCableReadyScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - CABLE_READY");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HIGH_SPEED_INTERNET_ACCESS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - HIGH_SPEED_INTERNET_ACCESS" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - HIGH_SPEED_INTERNET_ACCESS",
            property.getAmenities() contains Amenity.HIGH_SPEED_INTERNET_ACCESS
         );
    then
        System.out.println(String.format("Adding HIGH_SPEED_INTERNET_ACCESS amenity score for %s", $ps.getProperty().getId()));

        double score = 2.5 * $ps.getScaler().getHighSpeedInternetScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - HIGH_SPEED_INTERNET_ACCESS");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SWIMMING_POOL
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - SWIMMING_POOL" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - SWIMMING_POOL",
            property.getAmenities() contains Amenity.SWIMMING_POOL
         );
    then
        System.out.println(String.format("Adding SWIMMING_POOL amenity score for %s", $ps.getProperty().getId()));

        double score = 4 * $ps.getScaler().getSwimmingPoolScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - SWIMMING_POOL");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GARAGE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - GARAGE" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - GARAGE",
            property.getAmenities() contains Amenity.GARAGE
         );
    then
        System.out.println(String.format("Adding GARAGE amenity score for %s", $ps.getProperty().getId()));

        double score = 2.5 * $ps.getScaler().getGarageScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - GARAGE");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// SECURITY
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - SECURITY" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - SECURITY",
            property.getAmenities() contains Amenity.SECURITY
         );
    then
        System.out.println(String.format("Adding SECURITY amenity score for %s", $ps.getProperty().getId()));

        double score = 6 * $ps.getScaler().getSecurityScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - SECURITY");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// GATED
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate amenity score - GATED" salience 1
    agenda-group "amenity_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate amenity score - GATED",
            property.getAmenities() contains Amenity.GATED
         );
    then
        System.out.println(String.format("Adding GATED amenity score for %s", $ps.getProperty().getId()));

        double score = 3.5 * $ps.getScaler().getGatedScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate amenity score - GATED");
        update($ps);
end