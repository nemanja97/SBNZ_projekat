package rs.ac.uns.ftn.sbnz.rules

import rs.ac.uns.ftn.sbnz.models.drools.PropertyWithScore;
import rs.ac.uns.ftn.sbnz.models.drools.ScoredProperties;
import rs.ac.uns.ftn.sbnz.models.*;
import rs.ac.uns.ftn.sbnz.models.Property;
import rs.ac.uns.ftn.sbnz.models.PlaceOfInterest;
import rs.ac.uns.ftn.sbnz.models.drools.SmartSearch;
import rs.ac.uns.ftn.sbnz.models.drools.PropertyInformation;
import rs.ac.uns.ftn.sbnz.models.drools.PersonalInformation;
import rs.ac.uns.ftn.sbnz.models.enums.Interest;
import rs.ac.uns.ftn.sbnz.models.enums.Heating;
import rs.ac.uns.ftn.sbnz.models.enums.PetStatus;
import rs.ac.uns.ftn.sbnz.models.enums.Amenity;
import rs.ac.uns.ftn.sbnz.models.enums.TypeOfPlace;

import java.util.List;

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// FURNACE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - FURNACE" salience 1
    agenda-group "heating_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate heating score - FURNACE",
            property.getHeating() == Heating.FURNACE
        );
    then
        System.out.println(String.format("Adding FURNACE heating score for %s", $ps.getProperty().getId()));

        double score = 1 * $ps.getScaler().getHeatingScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate heating score - FURNACE");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// BOILER
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - BOILER" salience 1
    agenda-group "heating_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate heating score - BOILER",
            property.getHeating() == Heating.BOILER
        );
    then
        System.out.println(String.format("Adding BOILER heating score for %s", $ps.getProperty().getId()));

        double score = 2 * $ps.getScaler().getHeatingScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate heating score - BOILER");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HEAT_PUMP
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - HEAT_PUMP" salience 1
    agenda-group "heating_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate heating score - HEAT_PUMP",
            property.getHeating()  == Heating.HEAT_PUMP
        );
    then
        System.out.println(String.format("Adding HEAT_PUMP heating score for %s", $ps.getProperty().getId()));

        double score = 3 * $ps.getScaler().getHeatingScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate heating score - HEAT_PUMP");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// HYBRID
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - HYBRID" salience 1
    agenda-group "heating_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate heating score - HYBRID",
            property.getHeating() == Heating.HYBRID
        );
    then
        System.out.println(String.format("Adding HYBRID heating score for %s", $ps.getProperty().getId()));

        double score = 4 * $ps.getScaler().getHeatingScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate heating score - HYBRID");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// DUCTLESS_MINI_SPLITS
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - DUCTLESS_MINI_SPLITS" salience 1
    agenda-group "heating_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate heating score - DUCTLESS_MINI_SPLITS",
            property.getHeating() == Heating.DUCTLESS_MINI_SPLITS
         );
    then
        System.out.println(String.format("Adding DUCTLESS_MINI_SPLITS heating score for %s", $ps.getProperty().getId()));

        double score = 5 * $ps.getScaler().getHeatingScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate heating score - DUCTLESS_MINI_SPLITS");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// RADIANT
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - RADIANT" salience 1
    agenda-group "heating_score_calculation"
    when
        $ps: PropertyWithScore(
            scaler.getFiredRules() not contains "Calculate heating score - RADIANT",
            property.getHeating() == Heating.RADIANT
         );
    then
        System.out.println(String.format("Adding RADIANT heating score for %s", $ps.getProperty().getId()));

        double score = 6 * $ps.getScaler().getHeatingScale();
        $ps.setScore($ps.getScore() + score);

        System.out.println(String.format("Score for %s is %s \n", $ps.getProperty().getId(), $ps.getScore()));
        $ps.getScaler().getFiredRules().add("Calculate heating score - RADIANT");
        update($ps);
end

////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// END RULE
////////////////////////////////////////////////////////////////////////////////////////////////////////////////////////

rule "Calculate heating score - END" salience -1
    enabled false
    agenda-group "heating_score_calculation"
    when
    then
        kcontext.getKnowledgeRuntime().getAgenda().getAgendaGroup("pet_score_calculation").setFocus();
end